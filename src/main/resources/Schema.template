{
  "$schema" : "{{{draft}}}",
  "type" : "object",
  "definitions" : {
    "Transform": {
      "type": "object",
      "oneOf": [
        {
          "$comment": "You can use the AWS::Include transform anywhere within the AWS CloudFormation template except in the template parameters section or the template version field. For example, you can use AWS::Include in the mappings section.",
          "properties": {
            "Name": {
              "type": "string",
              "enum": [
                "AWS::Include"
              ]
            },
            "Parameters": {
              "type": "object",
              "properties": {
                "Location": {
                  "$comment": "The location is an Amazon S3 URI, with a specific file name in an S3 bucket. For example, s3://MyBucketName/MyFile.yaml.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "additionalProperties": false
            }
          },
          "additionalProperties": false
        },
        {
          "$comment": "Use a transform to simplify template authoring for serverless applications. ",
          "type": "string",
          "enum": [
            "AWS::Serverless-2016-10-31"
          ]
        }
      ]
    },
    "FnRef": {
      "type": "object",
      "properties": {
        "Ref": {
          "type": "string"
        }
      },
      "required": ["Ref"],
      "additionalProperties": false
    },
    "FnGetAtt": {
      "type": "object",
      "properties": {
        "Fn::GetAtt": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "uniqueItems": true,
          "maxItems": 3,
          "minItems": 2
        }
      },
      "required": ["Fn::GetAtt"],
      "additionalProperties": false
    },
    {{{resources}}}
  },
  "additionalProperties": false,
  "properties" : {
    "AWSTemplateFormatVersion" : {
      "type" : "string",
      "enum" : [ "2010-09-09" ]
    },
    "Description" : {
      "type" : "string"
    },
    "Metadata" : {
      "type" : "object"
    },
    "Parameters" : {
      "type" : "object",
      "additionalProperties": {
        "oneOf": [
          {
            "$ref": "../cfn-parameter.json#/definitions/StringParam"
          },
          {
            "$ref": "../cfn-parameter.json#/definitions/StringLikeParam"
          },
          {
            "$ref": "../cfn-parameter.json#/definitions/NumberParam"
          },
          {
            "$ref": "../cfn-parameter.json#/definitions/CommonDelimitedList"
          },
          {
            "$ref": "../cfn-parameter.json#/definitions/StringLikeList"
          },
          {
            "$ref": "../cfn-parameter.json#/definitions/NumberList"
          }
        ]
      }
    },
    "Mappings" : {
      "type" : "object"
    },
    "Conditions" : {
      "type" : "object"
    },
    "Transform" : {
      "$comment": "The optional Transform section specifies one or more transforms that AWS CloudFormation uses to process your template. The Transform section builds on the simple, declarative language of AWS CloudFormation with a powerful macro system.\nAWS CloudFormation transforms help simplify template authoring by condensing the expression of AWS infrastructure as code and enabling reuse of template components. For example, you can condense a multiple-line resource declaration into a single line in your template.\nAWS CloudFormation supports AWS::Serverless and AWS::Include transform types:\n- An AWS::Serverless transform specifies the version of the AWS Serverless Application Model (AWS SAM) to use. This model defines the AWS SAM syntax that you can use and how AWS CloudFormation processes it. When you create a change set, AWS CloudFormation resolves all Transform functions. For more information about serverless applications and AWS SAM, see Deploying Lambda-based Applications in the AWS Lambda Developer Guide.\n- An AWS::Include transform works with template snippets that are stored separately from the main AWS CloudFormation template. You can insert these snippets into your main template when Creating a Change Set or Updating Stacks Using Change Sets.\nYou can declare a single transform or multiple transforms within a template. AWS CloudFormation executes transformations in the order that they are specified.\nTo declare multiple transforms, use a list format and specify one or more AWS::Include transforms and (optionally) an AWS::Serverless transform. The following example declares two AWS::Include transforms.",
      "$ref": "#/definitions/Transform"
    },
    "Outputs" : {
      "type" : "object"
    },
    "Resources" : {
        "$ref": "#/definitions/resources"
    }
  },
  "description" : "{{description}}",
  "required" : [ "AWSTemplateFormatVersion", "Resources" ]
}
